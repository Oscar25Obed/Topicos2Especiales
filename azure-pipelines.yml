trigger:
  branches:
    include:
      - main

variables:
  imageName: 'mi-app'
  acrName: 'PruebaConPipeline'   # sin .azurecr.io
  acrLoginServer: 'pruebaconpipeline.azurecr.io'
  containerGroup: 'miapp-aci'
  resourceGroup: 'Topicos2'
  location: 'eastus'

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Docker@2
  displayName: 'Build Docker image'
  inputs:
    command: build
    repository: $(imageName)
    dockerfile: '**/Dockerfile'
    tags: |
      $(Build.BuildId)
    containerRegistry: '$(acrName)'

- task: Docker@2
  displayName: 'Push image to ACR'
  inputs:
    command: push
    repository: $(imageName)
    tags: |
      $(Build.BuildId)
    containerRegistry: '$(acrName)'

- task: AzureCLI@2
  displayName: 'Deploy to Azure Container Instances'
  inputs:
    azureSubscription: 'azureServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az container create \
        --resource-group $(resourceGroup) \
        --name $(containerGroup) \
        --image $(acrLoginServer)/$(imageName):$(Build.BuildId) \
        --registry-login-server $(acrLoginServer) \
        --registry-username $(ACR_USERNAME) \
        --registry-password $(ACR_PASSWORD) \
        --dns-name-label $(containerGroup)-$(Build.BuildId) \
        --ports 80 \
        --location $(location) \
        --restart-policy OnFailure

  env:
    ACR_USERNAME: $(ACR_USERNAME)
    ACR_PASSWORD: $(ACR_PASSWORD)